{"ast":null,"code":"const handleDelete = id => {\n  Swal.fire({\n    icon: 'warning',\n    title: 'Are you sure?',\n    text: \"You won't be able to revert this!\",\n    showCancelButton: true,\n    confirmButtonText: 'Yes, delete it!',\n    cancelButtonText: 'No, cancel!'\n  }).then(async result => {\n    if (result.value) {\n      try {\n        // Make API call to delete employee\n        const response = await fetch(`/api/employees/${id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          // Update state only if the API call is successful\n          setEmployees(prevEmployees => prevEmployees.filter(employee => employee.id !== id));\n          const [deletedEmployee] = employees.filter(employee => employee.id === id);\n          Swal.fire({\n            icon: 'success',\n            title: 'Deleted!',\n            text: `${deletedEmployee.firstName} ${deletedEmployee.lastName}'s data has been deleted.`,\n            showConfirmButton: false,\n            timer: 1500\n          });\n        } else {\n          throw new Error('Failed to delete employee');\n        }\n      } catch (error) {\n        console.error('Error deleting employee:', error);\n        // Handle the error here, e.g., display an error message to the user\n      }\n    }\n  });\n};","map":{"version":3,"names":["handleDelete","id","Swal","fire","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","response","fetch","method","ok","setEmployees","prevEmployees","filter","employee","deletedEmployee","employees","firstName","lastName","showConfirmButton","timer","Error","error","console"],"sources":["C:/Users/ACER/Downloads/gasmanagement/gasmanagement/src/Page/Dashboard/index.js"],"sourcesContent":["const handleDelete = (id) => {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, cancel!',\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n        try {\r\n          // Make API call to delete employee\r\n          const response = await fetch(`/api/employees/${id}`, {\r\n            method: 'DELETE',\r\n          });\r\n  \r\n          if (response.ok) {\r\n            // Update state only if the API call is successful\r\n            setEmployees((prevEmployees) => prevEmployees.filter(employee => employee.id !== id));\r\n  \r\n            const [deletedEmployee] = employees.filter(employee => employee.id === id);\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'Deleted!',\r\n              text: `${deletedEmployee.firstName} ${deletedEmployee.lastName}'s data has been deleted.`,\r\n              showConfirmButton: false,\r\n              timer: 1500,\r\n            });\r\n          } else {\r\n            throw new Error('Failed to delete employee');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error deleting employee:', error);\r\n          // Handle the error here, e.g., display an error message to the user\r\n        }\r\n      }\r\n    });\r\n  };\r\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAIC,EAAE,IAAK;EACzBC,IAAI,CAACC,IAAI,CAAC;IACRC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,eAAe;IACtBC,IAAI,EAAE,mCAAmC;IACzCC,gBAAgB,EAAE,IAAI;IACtBC,iBAAiB,EAAE,iBAAiB;IACpCC,gBAAgB,EAAE;EACpB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAOC,MAAM,IAAK;IACxB,IAAIA,MAAM,CAACC,KAAK,EAAE;MAChB,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kBAAiBb,EAAG,EAAC,EAAE;UACnDc,MAAM,EAAE;QACV,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACf;UACAC,YAAY,CAAEC,aAAa,IAAKA,aAAa,CAACC,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACnB,EAAE,KAAKA,EAAE,CAAC,CAAC;UAErF,MAAM,CAACoB,eAAe,CAAC,GAAGC,SAAS,CAACH,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACnB,EAAE,KAAKA,EAAE,CAAC;UAC1EC,IAAI,CAACC,IAAI,CAAC;YACRC,IAAI,EAAE,SAAS;YACfC,KAAK,EAAE,UAAU;YACjBC,IAAI,EAAG,GAAEe,eAAe,CAACE,SAAU,IAAGF,eAAe,CAACG,QAAS,2BAA0B;YACzFC,iBAAiB,EAAE,KAAK;YACxBC,KAAK,EAAE;UACT,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;MACF;IACF;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}