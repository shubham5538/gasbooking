{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Downloads\\\\gasmanagement\\\\gasmanagement\\\\src\\\\Page\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport Header from './Header';\nimport List from './List';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { employeesData } from '../../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [employees, setEmployees] = useState(employeesData);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleEdit = id => {\n    const employee = employees.find(emp => emp.id === id);\n    setSelectedEmployee(employee);\n    setIsEditing(true);\n  };\n  const handleDelete = id => {\n    Swal.fire({\n      icon: 'warning',\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, cancel!'\n    }).then(result => {\n      if (result.value) {\n        const updatedEmployees = employees.filter(emp => emp.id !== id);\n        setEmployees(updatedEmployees);\n        Swal.fire({\n          icon: 'success',\n          title: 'Deleted!',\n          text: `${selectedEmployee.firstName} ${selectedEmployee.lastName}'s data has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isAdding && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setIsAdding: setIsAdding\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        employees: employees,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isAdding && /*#__PURE__*/_jsxDEV(Add, {\n      employees: employees,\n      setEmployees: setEmployees,\n      setIsAdding: setIsAdding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Edit, {\n      employees: employees,\n      selectedEmployee: selectedEmployee,\n      setEmployees: setEmployees,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"RF2OJfX+XCyxy5jCkfqraOsMGQw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Swal","Header","List","Add","Edit","employeesData","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","employees","setEmployees","selectedEmployee","setSelectedEmployee","isAdding","setIsAdding","isEditing","setIsEditing","handleEdit","id","employee","find","emp","handleDelete","fire","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","updatedEmployees","filter","firstName","lastName","showConfirmButton","timer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Downloads/gasmanagement/gasmanagement/src/Page/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport Header from './Header';\r\nimport List from './List';\r\nimport Add from './Add';\r\nimport Edit from './Edit';\r\nimport { employeesData } from '../../data';\r\n\r\nfunction Dashboard() {\r\n  const [employees, setEmployees] = useState(employeesData);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEdit = (id) => {\r\n    const employee = employees.find((emp) => emp.id === id);\r\n    setSelectedEmployee(employee);\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    Swal.fire({\r\n      icon: 'warning',\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, cancel!',\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        const updatedEmployees = employees.filter((emp) => emp.id !== id);\r\n        setEmployees(updatedEmployees);\r\n\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: `${selectedEmployee.firstName} ${selectedEmployee.lastName}'s data has been deleted.`,\r\n          showConfirmButton: false,\r\n          timer: 1500,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      {/* List */}\r\n      {!isAdding && !isEditing && (\r\n        <>\r\n          <Header setIsAdding={setIsAdding} />\r\n          <List\r\n            employees={employees}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n          />\r\n        </>\r\n      )}\r\n      {/* Add */}\r\n      {isAdding && (\r\n        <Add employees={employees} setEmployees={setEmployees} setIsAdding={setIsAdding} />\r\n      )}\r\n      {/* Edit */}\r\n      {isEditing && (\r\n        <Edit\r\n          employees={employees}\r\n          selectedEmployee={selectedEmployee}\r\n          setEmployees={setEmployees}\r\n          setIsEditing={setIsEditing}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}